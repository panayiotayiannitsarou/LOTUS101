import pandas as pd
import itertools
from collections import Counter

# -----------------------------
# Βήμα 1 – Κατανομή Παιδιών Εκπαιδευτικών
# -----------------------------

# 📌 Αναγνώριση Μαθητών:
# • Επιλέγονται μόνο μαθητές με τιμή Ν στη στήλη ΠΑΙΔΙ_ΕΚΠΑΙΔΕΥΤΙΚΟΥ.

# 🔹 Κανόνας 1 – Όταν ο αριθμός παιδιών ≤ αριθμός τμημάτων:
# 📌 Στόχος: Η όσο το δυνατόν ισόποση κατανομή των παιδιών εκπαιδευτικών στα τμήματα.
# • Τοποθετείται το πολύ ένα παιδί εκπαιδευτικού ανά τμήμα.
# • Η τοποθέτηση γίνεται με σειρά, χωρίς άλλες προτεραιότητες.
# • Η τοποθέτηση των παιδιών εκπαιδευτικών γίνεται αποκλειστικά στη στήλη ΠΡΟΤΕΙΝΟΜΕΝΟ_ΤΜΗΜΑ.
# • Οι μαθητές αυτοί μαρκάρονται ως κλειδωμένοι (ΚΛΕΙΔΩΜΕΝΟΣ = True).
# • Η φιλία θεωρείται πλήρως αμοιβαία μόνο αν και οι δύο μαθητές έχουν δηλώσει ο ένας τον άλλον.

# 🔹 Κανόνας 2 – Όταν ο αριθμός παιδιών > αριθμός τμημάτων:
# 📌 Στόχος: Η όσο το δυνατόν ισόποση κατανομή των παιδιών εκπαιδευτικών στα τμήματα.
# • Δημιουργούνται εναλλακτικά σενάρια κατανομής, τα οποία εφαρμόζουν τους εξής κανόνες προτεραιότητας:
#   1️⃣ Υποστήριξη πλήρως αμοιβαίας φιλίας μεταξύ παιδιών εκπαιδευτικών (ισχύει μόνο για δυάδα που πρέπει να μπουν μαζί).
#   2️⃣ Αποφυγή συγκέντρωσης ίδιου φύλου.
# ➤ Αν δεν υπάρχει πλήρως αμοιβαία φιλία, επιλέγεται τμήμα με:
# • Τον μικρότερο αριθμό παιδιών εκπαιδευτικών.
# • Τη μικρότερη συγκέντρωση του ίδιου φύλου με το παιδί που εξετάζεται.
# • Η τοποθέτηση των παιδιών εκπαιδευτικών γίνεται αποκλειστικά στη στήλη ΠΡΟΤΕΙΝΟΜΕΝΟ_ΤΜΗΜΑ.
# • Οι μαθητές αυτοί μαρκάρονται ως κλειδωμένοι (ΚΛΕΙΔΩΜΕΝΟΣ = True).
# • Η φιλία θεωρείται πλήρως αμοιβαία μόνο αν και οι δύο μαθητές έχουν δηλώσει ο ένας τον άλλον.

# 🧠 Γενικός Κανόνας Κανονικοποίησης Εναλλακτικών Σεναρίων (Βήμα 1)
# • Όταν εξετάζονται εναλλακτικά σενάρια κατανομής παιδιών εκπαιδευτικών,
# κρατούνται μόνο τα ουσιαστικά διαφορετικά σενάρια. Αν τα σύνολα μαθητών
# ανά τμήμα είναι ίδια ανεξαρτήτως ονόματος (Α1/Α2), τότε το σενάριο είναι
# επαναλαμβανόμενο και απορρίπτεται.

# Έλεγχος για το αν πρέπει να ενεργοποιηθεί η αξιολόγηση ισορροπίας φύλου
# (χρήσιμο μόνο αν υπάρχουν και αγόρια και κορίτσια)
genders_all = set(df[df['ΠΑΙΔΙ_ΕΚΠΑΙΔΕΥΤΙΚΟΥ'] == 'Ν']['ΦΥΛΟ'])
enable_gender_balance_check = len(genders_all) > 1

# Μετά τη δημιουργία όλων των σεναρίων (valid_senarios)
# Ελέγχουμε αν κάποιο σενάριο έχει τμήμα με αποκλειστικά μαθητές ίδιου φύλου
scenario_labels = []
for scenario in valid_senarios:
    label = ''
    if enable_gender_balance_check:
        for tmhma in scenario.values():
            genders = [df[df['ΟΝΟΜΑΤΕΠΩΝΥΜΟ'] == name]['ΦΥΛΟ'].values[0] for name in tmhma]
            if len(set(genders)) == 1 and len(genders) > 1:
                label = '⚠ Πιθανή ανισορροπία φύλου'
                break
    scenario_labels.append(label)

# Τα σενάρια που έχουν σήμανση "⚠" τοποθετούνται στο τέλος της λίστας
scenarios_with_labels = list(zip(valid_senarios, scenario_labels))
scenarios_with_labels.sort(key=lambda x: x[1] == '⚠ Πιθανή ανισορροπία φύλου')

# Ξεχωρίζουμε τα σενάρια και τις ετικέτες τους
valid_senarios, scenario_labels = zip(*scenarios_with_labels)
valid_senarios = list(valid_senarios)
scenario_labels = list(scenario_labels)

# Επιστρέφουμε τα ταξινομημένα σενάρια με την κατάλληλη σήμανση
